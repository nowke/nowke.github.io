{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Give a Î˜(n) implementation of union-set for sets represented as ordered lists.\n\n(define (union-set set1 set2)\n    (cond ((null? set1) set2)\n          ((null? set2) set1)\n          (else\n            (let ((x1 (car set1))\n                  (x2 (car set2)))\n                (cond ((= x1 x2)\n                       (cons x1 (union-set (cdr set1) (cdr set2))))\n                      ((> x1 x2)\n                       (cons x2 (union-set set1 (cdr set2))))\n                      (else\n                        (cons x1 (union-set (cdr set1) set2))))))))\n\n; Testing\n(union-set (list 1 3 4 6) (list 2 5 6 7)) ;(1 2 3 4 5 6 7)"}}}},"pageContext":{"name":"2.62.scm","expr":"master:sicp/ch2-abstraction-data/2.62.scm"}}