{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Each of the following two procedures converts a binary tree to a list.\n(define (tree->list-1 tree) \n    (if (null? tree)\n        '()\n        (append (tree->list-1 (left-branch tree))\n                (cons (entry tree)\n                      (tree->list-1\n                        (right-branch tree))))))\n(define (tree->list-2 tree)\n    (define (copy-to-list tree result-list)\n        (if (null? tree)\n            result-list\n            (copy-to-list (left-branch tree)\n                          (cons (entry tree)\n                                (copy-to-list\n                                    (right-branch tree)\n                                    result-list)))))\n    (copy-to-list tree '()))\n\n; (a) Do the two procedures produce the same result for\n;     every tree? If not, how do the results differ? What lists\n;     do the two procedures produce for the trees in Figure 2.16?\n\n(define (entry tree) (car tree))\n(define (left-branch tree) (cadr tree))\n(define (right-branch tree) (caddr tree))\n\n(define (make-tree entry left right)\n    (list entry left right))\n\n; Test for all 3 trees in Figure 2.16\n(define tree1 (list 7 (list 3 (list 1 '() '()) (list 5 '() '())) \n    (list 9 '() (list 11 '() '()))))\n(define tree2 \n    (list 3 (list 1 '() '()) \n            (list 7 (list 5 '() '())\n                    (list 9 '() (list 11 '() '())))))\n(define tree3\n    (list 5 (list 3 (list 1 '() '()) '())\n            (list 9 (list 7 '() '())\n                    (list 11 '() '()))))\n\n(tree->list-1 tree1) ;(1 3 5 7 9 11)\n(tree->list-2 tree1) ;(1 3 5 7 9 11)\n\n(tree->list-1 tree2) ;(1 3 5 7 9 11)\n(tree->list-2 tree2) ;(1 3 5 7 9 11)\n\n(tree->list-1 tree3) ;(1 3 5 7 9 11)\n(tree->list-2 tree3) ;(1 3 5 7 9 11)\n\n; Ans: Both the procedures produce the same results for every tree\n; For all 3 figures in Fig 2.16, list is (1 3 5 7 9 11)\n\n; (b) Do the two procedures have the same order of growth in the number of \n;     steps required to convert a balanced tree with n elements to a list? \n;     If not, which one grows more slowly?\n\n; Ans\n; tree->list-1 takes O(n log n) time\n; tree->list-2 takes O(n) time"}}}},"pageContext":{"name":"2.63.scm","expr":"master:sicp/ch2-abstraction-data/2.63.scm"}}