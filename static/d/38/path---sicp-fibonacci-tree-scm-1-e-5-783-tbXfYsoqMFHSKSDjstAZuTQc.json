{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Fibonacci series using tree recursion\n(define (fib n)\n    (cond ((= n 0) 0)\n          ((= n 1) 1)\n          (else (+ (fib (- n 1))\n                   (fib (- n 2))))\n    )\n)\n\n(fib 6)\n(fib 5)\n(fib 4)\n\n; Fibonacci series using iterative process\n(define (fib n)\n    (define (fib-iter a b count)\n        (if (= count 0)\n            b\n            (fib-iter (+ a b) a (- count 1))\n        )\n    )\n    (fib-iter 1 0 n)\n)\n(fib 6)\n(fib 5)\n(fib 4)\n; (fib 6)\n;  => (fib-iter 1 0 6)\n;  => (fib-iter 1 1 5)\n;  => (fib-iter 2 1 4)\n;  => (fib-iter 3 2 3)\n;  => (fib-iter 5 3 2)\n;  => (fib-iter 8 5 1)\n;  => (fib-iter 13 8 0)\n;  => 8"}}}},"pageContext":{"name":"fibonacci_tree.scm","expr":"master:sicp/ch1-abstraction-procedures/fibonacci_tree.scm"}}