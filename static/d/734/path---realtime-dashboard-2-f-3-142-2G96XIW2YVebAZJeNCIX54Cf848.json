{"data":{"markdownRemark":{"html":"<p>In this post, we will be creating a simple scalable dashboard that updates in real-time using <a href=\"ll\">React</a>, <a href=\"ll\">GraphQL Subscriptions</a> and <a href=\"ll\">Redis PubSub</a>. Real-time dashboards can be used to monitor your <strong>infrastructure</strong> (servers, network, services), <strong>application traffic</strong> (transaction volume, number of users), <strong>alerts</strong> (application health, critical issues, downtimes) etc. Almost always, dashboards are backed up with one or more datasources.</p>\n<p>There are many open-source applications that can be used to create dashboards. For example, <strong><a href=\"ll\">Kibana</a></strong> can be used to visualize application logs integrated with <a href=\"ll\">ELK Stack</a>. <strong><a href=\"ll\">Grafana</a></strong> can be used to create a variety of visualizations on top of time series databases such as <a href=\"ll\">Prometheus</a>, <a href=\"ll\">Graphite</a> and <a href=\"ll\">OpenTSDB</a>. But, as of today, they support <a href=\"https://en.wikipedia.org/wiki/Pull_technology\">pull-based model</a>. That is, when a user opens the browser, application makes the queries and result is rendered. It is the most widely used model as opposed to a <a href=\"https://en.wikipedia.org/wiki/Push_technology\">Push model</a>. </p>\n<p><strong>When push-model can be used?</strong></p>\n<p>Assume you have a dashboard containing <strong><em>20 panels</em></strong>, querying data from multiple datasources at the backend in real-time. User has set a refresh rate of <strong><em>5 seconds</em></strong>. If, on an average <strong><em>100 users</em></strong> open the dashboard at any time - that is <strong><em>20 x 100 = 2000 requests</em></strong> every 5 seconds! This is manageable if you have good infrastructure for your underlying time-series database. </p>","frontmatter":{"title":"Real-time Dashboard"}}},"pageContext":{"slug":"/realtime-dashboard/"}}