{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Define the below operation for painters. below takes two painters as arguments. The resulting painter, given\n; a frame, draws with the first painter in the bottom of the frame and with the second painter in the top.\n; Define below in two different ways â€” first by writing a procedure that is analogous to the beside procedure\n; given above, and again in terms of beside and suitable rotation operations (from Exercise 2.50).\n#lang racket\n(require (planet \"sicp.ss\" (\"soegaard\" \"sicp.plt\" 2 1)))\n\n; Helpers\n(define (xcor-vect v) (car v))\n(define (ycor-vect v) (cdr v))\n(define (sub-vect v1 v2)\n    (make-vect \n        (- (xcor-vect v1) (xcor-vect v2))\n        (- (ycor-vect v1) (ycor-vect v2))))\n\n(define (transform-painter painter origin corner1 corner2)\n  (lambda (frame)\n    (let ((m (frame-coord-map frame)))\n      (let ((new-origin (m origin)))\n        (painter (make-frame\n                   new-origin\n                   (sub-vect (m corner1) new-origin)\n                   (sub-vect (m corner2) new-origin)))))))\n\n; (i) Below procedure analogous to `beside`\n(define (below painter1 painter2)\n  (let ((split-point (make-vect 0 0.5)))\n    (let ((paint-bottom (transform-painter\n            painter1\n            (make-vect 0 0)\n            (make-vect 1 0)\n            split-point))\n          (paint-top\n           (transform-painter\n            painter2\n            split-point\n            (make-vect 1 0.5)\n            (make-vect 0 1))))\n      (lambda (frame) (paint-bottom frame) (paint-top frame)))))\n\n; Test \n(define f1-list (list (make-segment (make-vect 0.3 0.3) (make-vect 0.5 0.7))\n                      (make-segment (make-vect 0.5 0.7) (make-vect 0.8 0.3))))\n(define f1 (segments->painter f1-list))\n(display \"\\nFrame 1\\n\")\n(paint f1)\n\n(display \"\\nBelow Frame1 & Frame1\\n\")\n(paint (below f1 f1))\n\n; (ii) Below procedure using beside and rotation\n(define (below2 painter1 painter2)\n  (rotate270 (beside (rotate90 painter2) (rotate90 painter1))))\n\n; Test\n(display \"\\nBelow Frame1 & Frame1\\n\")\n(paint (below2 f1 f1))"}}}},"pageContext":{"name":"2.51.rkt","expr":"master:sicp/ch2-abstraction-data/2.51.rkt"}}