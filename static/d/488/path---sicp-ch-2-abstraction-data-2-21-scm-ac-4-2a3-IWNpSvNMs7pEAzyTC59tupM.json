{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; The procedure square-list takes a list of numbers as argument and \n; returns a list of the squares of those numbers.\n; (square-list (list 1 2 3 4)) \n; (1 4 9 16)\n; Here are two different definitions of square-list. Complete both of \n; them by filling in the missing expressions:\n; (define (square-list items) \n;   (if (null? items)\n;       nil\n;       (cons ⟨??⟩ ⟨??⟩)))\n;\n; (define (square-list items)\n;    (map ⟨??⟩ ⟨??⟩)) \n\n(define (square-list items)\n    (if (null? items)\n        items\n        (cons (square (car items))\n              (square-list (cdr items))))\n)\n(square-list (list 1 2 3 5)) ; (1 4 9 25)\n\n(define (square-list items)\n    (map square items))\n(square-list (list 2 4 5 6)) ; (4 16 25 36)"}}}},"pageContext":{"name":"2.21.scm","expr":"master:sicp/ch2-abstraction-data/2.21.scm"}}