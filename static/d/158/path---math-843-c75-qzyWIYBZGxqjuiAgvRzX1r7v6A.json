{"data":{"markdownRemark":{"html":"<h2>Classification Problem</h2>\n<p>Consider a simple classification problem of whether or not a candidate's profile is accepted for a job interview.</p>\n<p><strong>Problem Statement</strong></p>\n<blockquote>\n<p>HR of company ABC decides whether or not to give a chance for the job interview. For simplicity, only two parameters are considered - <strong>GPA</strong> and <strong>year of experience</strong>. A dataset of GPA, year of experience and decision (True or False) is provided in <code class=\"language-text\">candidates.csv</code>.</p>\n</blockquote>\n<h3>Preview dataset</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">%</span>matplotlib inline\n<span class=\"token operator\">%</span>config InlineBackend<span class=\"token punctuation\">.</span>figure_format <span class=\"token operator\">=</span> <span class=\"token string\">'retina'</span>\n<span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> set_matplotlib_formats\nset_matplotlib_formats<span class=\"token punctuation\">(</span><span class=\"token string\">'pdf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'svg'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns<span class=\"token punctuation\">;</span> sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\ncandidates <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'./candidates.csv'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">candidates<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>gpa</th>\n      <th>experience</th>\n      <th>offer</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.5</td>\n      <td>2.5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5.4</td>\n      <td>3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.1</td>\n      <td>3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5.8</td>\n      <td>5.5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.2</td>\n      <td>4.5</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p><strong>Draw a scatter plot</strong></p>\n<ul>\n<li><strong>X-axis</strong> - GPA</li>\n<li><strong>Y-axis</strong> - Years of experience</li>\n<li>\n<p><strong>Colors</strong></p>\n<ul>\n<li><strong>Red</strong>   - Reject</li>\n<li><strong>Green</strong> - Accept</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">sns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>\n    x_vars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"gpa\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    y_vars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"experience\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    data <span class=\"token operator\">=</span> candidates<span class=\"token punctuation\">,</span>\n    hue <span class=\"token operator\">=</span> <span class=\"token string\">\"offer\"</span><span class=\"token punctuation\">,</span>\n    height <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    palette <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&lt;seaborn.axisgrid.PairGrid at 0x113faaf98&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><img src=\"/output_4_1-fc9198ca3a48bc74dd7ea5523d1e47fe.svg\" alt=\"svg\"></p>\n<p>A line can be easily drawn to separate <strong>Red</strong> and <strong>Green</strong> dots. Let's draw a line with points determined from naked eye. Also, label <strong>GPA</strong> as <code class=\"language-text\">x1</code> and <strong>Experience</strong> as <code class=\"language-text\">x2</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Scatter plot (same as before)</span>\ng <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>\n    x_vars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"gpa\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    y_vars <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"experience\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    data <span class=\"token operator\">=</span> candidates<span class=\"token punctuation\">,</span>\n    hue <span class=\"token operator\">=</span> <span class=\"token string\">\"offer\"</span><span class=\"token punctuation\">,</span>\n    height <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    palette <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Add Labels, axes</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>\n    xlim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    ylim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    xlabel<span class=\"token operator\">=</span><span class=\"token string\">\"GPA (X1)\"</span><span class=\"token punctuation\">,</span>\n    ylabel<span class=\"token operator\">=</span><span class=\"token string\">\"Experience (X2)\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Plot line</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[&lt;matplotlib.lines.Line2D at 0x1154149e8&gt;]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><img src=\"/output_6_1-7e40ef5f7189614cc76e898a359467a3.svg\" alt=\"svg\"></p>\n<p>Equation of the line passing through points <code class=\"language-text\">(2, 16)</code>, <code class=\"language-text\">(10, -1)</code> can be calculated as,</p>\n$$\n\\frac{y - y_1}{x - x_1} = \\frac{y_2 - y_1}{x_2 - x_1}\n$$\n$$\n\\frac{y - 16}{x - 2} = \\frac{-17}{8}\n$$\n$$\n17x + 8y - 162 = 0\n$$\n<p>In terms of $x_1$ and $x_2$,</p>\n$$\n17x_1 + 8x_2 - 162 = 0\n$$\n<p>We can use this equation to determine whether a new candidate would be offered an interview or not. Consider the left part of the equation as <code class=\"language-text\">Score</code></p>\n<p><strong>Score</strong></p>\n<p><code class=\"language-text\">Score = (17 * GPA) + (8 * Experience) - 162</code></p>\n<p><strong>Prediction</strong></p>\n<ul>\n<li><code class=\"language-text\">Score &gt; 0</code> - <strong><span style=\"color:green\">Accept</span></strong></li>\n<li><code class=\"language-text\">Score &lt; 0</code> - <strong><span style=\"color:red\">Reject</span></strong></li>\n</ul>\n<h3>Modelling</h3>\n<p><strong>Boundary Line</strong></p>\n$$\nw_1 x_1 + w_2 x_2 + b = 0\n$$\n<p>In terms of vectors,</p>\n$$\nWx + b = 0\n$$\n<p>where,</p>\n$$\nW = (w_1, w_2),\nx = (x_1, x_2),\ny = \"0\" or \"1\"\n$$\n<p><strong>Prediction</strong></p>\n$$\n\\hat{y} =\n\\left\\{\n\\begin{array}{ll}\n1 & \\mbox{if $Wx + b \\geq 0$},\\\\\n0 & \\mbox{if $Wx + b \\lt 0$},\\\\\n\\end{array}\n\\right.\n$$\n<h2>Perceptron</h2>\n<p>The equation <code class=\"language-text\">Score = (17 * GPA) + (8 * Experience) - 162</code> can be modelled as a Perceptron. Following diagram represents the model visualization</p>\n<p><img src=\"/perceptron-candidate-a5ac0b5cfcd9230b27a1b4ecc1e18c6c.svg\" alt=\"Perceptron - Candidate\"></p>\n<p>In the case of Candidate selection, only 2 dimensions (GPA, Experience) are considered for decision. We can extend to <code class=\"language-text\">N</code> dimensions using perceptron model</p>\n<p><img src=\"/perceptron-general-82a957e558da1569bc3fd987dc1e1488.svg\" alt=\"Perceptron - general\"></p>\n<h3>Step function</h3>\n<p>For calculating <code class=\"language-text\">y</code>, we use the following function knows as <strong>Step function</strong></p>\n$$\ny =\n\\left\\{\n\\begin{array}{ll}\n1 & \\mbox{if $x\\geq 0$},\\\\\n0 & \\mbox{if $x \\lt 0$},\\\\\n\\end{array}\n\\right.\n$$\n<p><img src=\"/perceptron-step-7095e8b63608604c8a7d7145456bfb65.svg\" alt=\"Step function\"></p>","frontmatter":{"title":"","description":null}}},"pageContext":{"slug":"/math/"}}