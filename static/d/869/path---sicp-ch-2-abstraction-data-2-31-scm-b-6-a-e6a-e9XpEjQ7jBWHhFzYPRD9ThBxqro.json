{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Abstract your answer to Exercise 2.30 to produce a procedure tree-map with the \n; property that square-tree could be defined as\n; \n; (define (square-tree tree) (tree-map square tree))\n\n(define (tree-map f tree)\n    (map (lambda (sub-tree)\n            (if (pair? sub-tree)\n                (tree-map f sub-tree)\n                (f sub-tree)))\n         tree))\n(define (square-tree tree) (tree-map square tree))\n\n(square-tree\n    (list 1\n        (list 2 (list 3 4) 5)\n        (list 6 7)))\n;Value 2: (1 (4 (9 16) 25) (36 49))"}}}},"pageContext":{"name":"2.31.scm","expr":"master:sicp/ch2-abstraction-data/2.31.scm"}}