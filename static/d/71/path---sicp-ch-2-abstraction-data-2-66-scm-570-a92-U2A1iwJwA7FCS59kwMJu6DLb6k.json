{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Implement the lookup procedure for the case where the set of records is \n; structured as a binary tree, ordered by the numerical values of the keys.\n(define (entry tree) (car tree))\n(define (left-branch tree) (cadr tree))\n(define (right-branch tree) (caddr tree))\n\n(define (key record) (car record))\n\n(define (lookup given-key set-of-records)\n    (cond ((null? set-of-records) #f)\n          ((= given-key (key (entry set-of-records)))\n           (entry set-of-records))\n          ((< given-key (key (entry set-of-records)))\n           (lookup given-key (left-branch set-of-records)))\n          ((> given-key (key (entry set-of-records)))\n           (lookup given-key (right-branch set-of-records)))))\n\n; Testing\n(define tree1 (list (cons 7 \"Emp7\") (list (cons 3 \"Emp3\") (list (cons 1 \"Emp1\") '() '()) \n    (list (cons 5 \"Emp5\") '() '())) \n    (list (cons 9 \"Emp9\") '() (list (cons 11 \"Emp11\") '() '()))))\n\n(lookup 7 tree1) ;(7 . \"Emp7\")\n(lookup 12 tree1) ;#f"}}}},"pageContext":{"name":"2.66.scm","expr":"master:sicp/ch2-abstraction-data/2.66.scm"}}