{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; `scale-tree` procedure\n(define (scale-tree tree factor)\n    (cond ((null? tree) tree)\n          ((not (pair? tree)) (* factor tree))\n          (else (cons (scale-tree (car tree) factor)\n                      (scale-tree (cdr tree) factor)))))\n\n(scale-tree (list 1 (list 2 (list 3 4) 5) (list 6 7)) 10)\n; (10 (20 (30 40) 50) (60 70))\n\n; `scale-tree` using `map`\n(define (scale-tree tree factor)\n    (map (lambda (sub-tree)\n            (if (pair? sub-tree)\n                (scale-tree sub-tree factor)\n                (* sub-tree factor)))\n         tree))\n\n(scale-tree (list 1 (list 2 (list 3 4) 5) (list 6 7)) 10)\n; (10 (20 (30 40) 50) (60 70))"}}}},"pageContext":{"name":"tree-map.scm","expr":"master:sicp/ch2-abstraction-data/tree-map.scm"}}