{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":";  Define a procedure `double` that takes a procedure of \n; one argument as argument and returns a procedure that \n; applies the original procedure twice. For example, if \n; `inc` is a procedure that adds 1 to its argument, then \n; (double inc) should be a procedure that adds 2. What \n; value is returned by\n; (((double (double double)) inc) 5)\n\n(define (double f) (lambda (x) (f (f x))))\n\n(define (inc x) (+ x 1))\n(((double (double double)) inc) 5) ;Value: 21"}}}},"pageContext":{"name":"1.41.scm","expr":"master:sicp/ch1-abstraction-procedures/1.41.scm"}}