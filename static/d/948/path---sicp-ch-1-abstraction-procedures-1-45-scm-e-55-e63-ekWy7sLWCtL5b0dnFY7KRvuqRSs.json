{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; We saw in Section 1.3.3 that attempting to compute square \n; roots by naively finding a fixed point of y 􏰕→ x/y does not \n; converge, and that this can be fixed by average damping. \n; The same method works for finding cube roots as fixed \n; points of the average-damped y 􏰕→ x/y2. Unfortunately, the \n; process does not work for fourth roots — a single average \n; damp is not enough to make a fixed-point search for y 􏰕→ x/y3 \n; converge. On the other hand, if we average damp twice (i.e., \n; use the average damp of the average damp of y 􏰕→ x/y3) the \n; fixed-point search does converge. Do some experiments to \n; determine how many average damps are required to compute \n; nth roots as a fixed-point search based upon repeated average \n; damping of y 􏰕→ x/yn−1. Use this to implement a simple procedure \n; for computing nth roots using fixed-point, average-damp, and \n; the repeated procedure of Exercise 1.43. Assume that any \n; arithmetic operations you need are available as primitives.\n\n(define (average-damp f)\n    (lambda (x) ((lambda (a b) (/ (+ a b) 2)) x (f x))))\n(define (fixed-point f first-guess)\n    (define (close-enough? v1 v2)\n        (< (abs (- v1 v2)) 0.00001))\n    (define (try guess)\n        (let ((next (f guess)))\n            (if (close-enough? guess next)\n                next\n                (try next))))\n    (try first-guess))\n(define (compose f g)\n    (lambda (x) (f (g x))))\n(define (repeated f n)\n    (if (= n 1) (lambda (x) (f x))\n        (compose f (repeated f (- n 1))))\n)\n\n; Let's write nth-root procedure\n(define (nth-root x n damps)\n    (fixed-point \n        ((repeated average-damp damps)\n            (lambda (y) (/ x (expt y (- n 1)))))\n        1.0))\n\n; Let's try with some values\n(nth-root 1296 4 3) ;Value: 6.000005021306138 (6^4 = 1296)\n(nth-root 2197.5 5 3) ;Value: 4.660003848858503 (4.66^5 ~= 2197.5)\n\n; It is sufficient to apply number of damps log2(n) times\n(define (nth-root x n)\n    (define damps (floor (/ (log n) (log 2))))\n    (fixed-point \n        ((repeated average-damp damps)\n            (lambda (y) (/ x (expt y (- n 1)))))\n        1.0))\n\n(nth-root 1048576 20) ;Value: 1.999999063225966"}}}},"pageContext":{"name":"1.45.scm","expr":"master:sicp/ch1-abstraction-procedures/1.45.scm"}}