{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Define a procedure unique-pairs that, given an integer n, generates the sequence \n; of pairs (i, j) with 1 ≤ j < i ≤ n. Use unique-pairs to simplify the definition \n; of prime-sum-pairs given above.\n\n; Define helpers\n(define nil '())\n(define (enumarate-interval low high)\n    (if (> low high)\n        nil\n        (cons low (enumarate-interval (+ low 1) high))))\n(define (accumulate op initial sequence)\n    (if (null? sequence) \n        initial\n        (op (car sequence) (accumulate op initial (cdr sequence)))))\n(define (flatmap proc seq)\n    (accumulate append nil (map proc seq)))\n\n; Construct `unique-pairs` procedure\n(define (unique-pairs n)\n    (flatmap\n        (lambda (i)\n            (map \n                (lambda (j) (list i j))\n                (enumarate-interval 1 (- i 1))))\n        (enumarate-interval 1 n)))\n\n(unique-pairs 6)\n;Value 2: ((2 1) (3 1) (3 2) (4 1) (4 2) (4 3) (5 1) (5 2) (5 3) (5 4) (6 1) (6 2) (6 3) (6 4) (6 5))\n"}}}},"pageContext":{"name":"2.40.scm","expr":"master:sicp/ch2-abstraction-data/2.40.scm"}}