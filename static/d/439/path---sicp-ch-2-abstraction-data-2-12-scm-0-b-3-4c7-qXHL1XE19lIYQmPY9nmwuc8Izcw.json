{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; After debugging her program, Alyssa shows it to a potential \n; user, who complains that her program solves the wrong problem. \n; He wants a program that can deal with numbers represented as \n; a center value and an additive tolerance; for example, he \n; wants to work with intervals such as 3.5 ± 0.15 rather than \n; [3.35, 3.65]. Alyssa returns to her desk and fixes this problem \n; by supplying an alternate constructor and alternate selectors:\n(define (make-center-width c w) \n    (make-interval (- c w) (+ c w)))\n(define (center i)\n    (/ (+ (lower-bound i) (upper-bound i)) 2))\n(define (width i)\n    (/ (- (upper-bound i) (lower-bound i)) 2))\n; Unfortunately, most of Alyssa’s users are engineers. Real engineering \n; situations usually involve measurements with only a small uncertainty, \n; measured as the ratio of the width of the interval to the midpoint of \n; the interval. Engineers usually specify percentage tolerances on the \n; parameters of devices, as in the resistor specifications given earlier.\n; Define a constructor `make-center-percent` that takes a center and a \n; percentage tolerance and produces the desired interval. You must also \n; define a selector percent that produces the percentage tolerance for \n; a given interval. The center selector is the same as the one shown above.\n\n; Answer\n; --------------------------------\n; Let's define necessary helpers\n(define (make-interval a b)\n    (cons (min a b) (max a b)))\n(define (lower-bound z) (car z))\n(define (upper-bound z) (cdr z))\n\n; Let's construct `make-center-percent` procedure\n(define (make-center-percent c p)\n    (make-center-width c (/ (* c p) 100)))\n\n; `percent` constructor can be written as,\n(define (percent i)\n    (* (/ (width i) (center i)) 100.0))\n\n; Testing\n(define resistor1 (make-center-percent 5.6 10))\n(percent resistor1) ;Value: 10.000000000000009\n(center resistor1)  ;Value: 5.6\n"}}}},"pageContext":{"name":"2.12.scm","expr":"master:sicp/ch2-abstraction-data/2.12.scm"}}