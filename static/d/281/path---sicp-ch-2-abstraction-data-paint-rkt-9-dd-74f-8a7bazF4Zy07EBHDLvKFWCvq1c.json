{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"#lang racket\n(require (planet \"sicp.ss\" (\"soegaard\" \"sicp.plt\" 2 1)))\n(define wave einstein) ; Make compatible with the text book\n\n(define wave2 (beside wave (flip-vert wave)))\n(define wave4 (below wave2 wave2))\n\n(display \"beside wave \\n\")\n(paint wave2)\n\n(display \"\\nbeside below wave \\n\")\n(paint wave4)\n\n; Creating abstraction for `wave4`\n(define (flipped-pairs painter)\n  (let ((painter2 (beside painter (flip-vert painter))))\n    (below painter2 painter2)))\n\n(define wave5 (flipped-pairs wave))\n(display \"\\nflipped-pairs\\n\")\n(paint wave5)\n\n; Right split procedure\n(define (right-split painter n)\n  (if (= n 0)\n      painter\n      (let ((smaller (right-split painter (- n 1))))\n        (beside painter (below smaller smaller)))))\n\n(define rs4 (right-split wave 4))\n(display \"\\nRight split 4\\n\")\n(paint rs4)\n\n; Up split procedure\n(define (up-split painter n)\n    (if (= n 0)\n        painter\n        (let ((smaller (up-split painter (- n 1))))\n           (below painter (beside smaller smaller)))))\n\n; Defining `corner-split` procedure\n(define (corner-split painter n)\n  (if (= n 0)\n      painter\n      (let ((up (up-split painter (- n 1)))\n            (right (right-split painter (- n 1))))\n        (let ((top-left (beside up up))\n              (bottom-right (below right right))\n              (corner (corner-split painter (- n 1))))\n          (beside (below painter top-left)\n                  (below bottom-right corner))))))\n\n(define cs3 (corner-split wave 3))\n(display \"\\nCorner split 3\\n\")\n(paint cs3)\n\n; Define `square-limit` pattern\n(define (square-limit painter n)\n  (let ((quarter (corner-split painter n)))\n    (let ((half (beside (flip-horiz quarter) quarter)))\n      (below (flip-vert half) half))))\n\n(define sl3 (square-limit wave 3))\n(display \"\\nSquare limit pattern 3\\n\")\n(paint sl3)"}}}},"pageContext":{"name":"paint.rkt","expr":"master:sicp/ch2-abstraction-data/paint.rkt"}}