{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Sets as \"ordered\" lists\n(define (element-of-set? x set) \n    (cond ((null? set) false)\n          ((= x (car set)) true)\n          ((< x (car set)) false)\n          (else (element-of-set? x (cdr set)))))\n\n(define (intersection-set set1 set2) \n    (if (or (null? set1) (null? set2))\n        '()\n        (let ((x1 (car set1)) (x2 (car set2)))\n          (cond ((= x1 x2)\n                 (cons x1 (intersection-set (cdr set1)\n                                            (cdr set2))))\n                ((< x1 x2)\n                 (intersection-set (cdr set1) set2))\n                ((< x2 x1)\n                 (intersection-set set1 (cdr set2)))))))"}}}},"pageContext":{"name":"sets-ordered.scm","expr":"master:sicp/ch2-abstraction-data/sets-ordered.scm"}}