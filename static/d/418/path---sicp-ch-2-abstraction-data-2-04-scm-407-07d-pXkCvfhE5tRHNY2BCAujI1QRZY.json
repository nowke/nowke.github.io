{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Here is an alternative procedural representation of pairs. \n; For this representation, verify that (car (cons x y)) yields \n; x for any objects x and y.\n(define (cons x y) \n    (lambda (m) (m x y)))\n(define (car z)\n    (z (lambda (p q) p)))\n; What is the corresponding definition of cdr? (Hint: To verify \n; that this works, make use of the substitution model of Section 1.1.5.)\n\n; Verify using substitution model\n; \n; => (car (cons x y)) \n; => (car (lambda (m) (m x y)))\n; => ((lambda (m) (m x y)) (lamda (p q)) p))\n; => ((lambda (p q) p) x y)\n; => x\n\n; `cdr` can be defined as,\n(define (cdr z)\n    (z (lambda (p q) q)))"}}}},"pageContext":{"name":"2.04.scm","expr":"master:sicp/ch2-abstraction-data/2.04.scm"}}