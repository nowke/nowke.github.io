{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Install `=zero?` for polynomials in the generic arithmetic package. This will allow\n; `adjoin-term` to work for polynomials with coefficients that are themselves \n; polynomials.\n\n(load \"packages/general.scm\")\n(load \"packages/polynomial.scm\")\n(load \"arithmetic-package.scm\")\n\n; Answer\n\n; Inside the `polynomial` package, write the following snippet\n; (already included inside `packages/polynomial.scm`)\n\n(define (poly-zero? term-list)\n    (if (empty-termlist? term-list)\n        #t\n        (and (=zero? (first-term term-list))\n             (poly-zero? (rest-term term-list)))))\n\n(put '=zero? '(polynomial) (lambda (p) (poly-zero? p)))\n\n; Testing\n(install-polynomial-package)\n\n(define p1 \n    (make-polynomial \n        'x\n        (list (make-term 2 (make-scheme-number 0))\n              (make-term 1 (make-scheme-number 0))\n              (make-term 0 (make-scheme-number 0))))) ; 0x^2 + 1x + 0\n\n(=zero? p1) ;Value: #t\n\n(define p2\n    (make-polynomial\n        'x\n        (list (make-term 2 (make-scheme-number 0))\n              (make-term 1 (make-scheme-number 2))\n              (make-term 0 (make-scheme-number 0)))))\n(=zero? p2) ;Value: #f"}}}},"pageContext":{"name":"2.87.scm","expr":"master:sicp/ch2-abstraction-data/2.87.scm"}}