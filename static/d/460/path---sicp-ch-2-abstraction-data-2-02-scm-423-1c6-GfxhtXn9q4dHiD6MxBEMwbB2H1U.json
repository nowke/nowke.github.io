{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Consider the problem of representing line segments in a plane. \n; Each segment is represented as a pair of points: a starting point \n; and an ending point. Define a constructor make-segment and \n; selectors start-segment and end-segment that define the representation \n; of segments in terms of points. Furthermore, a point can be represented \n; as a pair of numbers: the x coordinate and the y coordinate. \n; Accordingly, specify a constructor make-point and selectors x-point and \n; y-point that define this representation. Finally, using your selectors \n; and constructors, define a procedure midpoint-segment that takes a \n; line segment as argument and returns its midpoint (the point whose \n; coordinates are the average of the coordinates of the endpoints). \n; To try your procedures, youâ€™ll need a way to print points:\n; (define (print-point p) \n;   (newline)\n;   (display \"(\") \n;   (display (x-point p)) \n;   (display \",\")\n;   (display (y-point p))\n;   (display \")\"))\n\n; Points\n(define (make-point x y) (cons x y))\n(define (x-point point) (car point))\n(define (y-point point) (cdr point))\n\n; Segments\n(define (make-segment point1 point2) (cons point1 point2))\n(define (start-segment segment) (car segment))\n(define (end-segment segment) (cdr segment))\n\n; Midpoint\n(define (midpoint-segment segment)\n    (make-point \n        (/ (+ (x-point (start-segment segment)) \n              (x-point (end-segment segment))) \n           2) \n        (/ (+ (y-point (start-segment segment)) \n            (y-point (end-segment segment))) \n           2)))\n\n(define (print-point p) \n    (newline)\n    (display \"(\") \n    (display (x-point p)) \n    (display \",\")\n    (display (y-point p))\n    (display \")\"))\n\n; Test\n(define point1 (make-point 1 2))\n(define point2 (make-point 2 5))\n(define segment1 (make-segment point1 point2))\n(define midpoint (midpoint-segment segment1))\n(print-point midpoint) ;(3/2,7/2)\n"}}}},"pageContext":{"name":"2.02.scm","expr":"master:sicp/ch2-abstraction-data/2.02.scm"}}