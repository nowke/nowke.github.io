{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; If your `product` procedure generates a recursive \n; process, write one that generates an iterative process. \n; If it generates an iterative process, write one that \n; generates a recursive process.\n\n; Iterative version of `product`\n(define (product term a next b)\n    (define (iter a result)\n        (if (> a b) result\n            (iter (next a) (* result (term a)))))\n    (iter a 1)\n)\n\n(define (factorial n)\n    (define (f x) x)\n    (define (next x) (+ x 1))\n    (product f 1 next n))\n\n(factorial 0) ;Value: 1\n(factorial 1) ;Value: 1\n(factorial 2) ;Value: 2\n(factorial 5) ;Value: 120"}}}},"pageContext":{"name":"1.31.b.scm","expr":"master:sicp/ch1-abstraction-procedures/1.31.b.scm"}}