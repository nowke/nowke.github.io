{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Implement the union-set operation for the unordered-list representation of sets.\n\n(define (union-set set1 set2)\n    (cond ((and (null? set1) (not (null? set2))) set2)\n          ((and (null? set2) (not (null? set1))) set1)\n          ((element-of-set? (car set1) set2)\n           (union-set (cdr set1) set2))\n          (else (cons (car set1)\n                      (union-set (cdr set1) set2)))))\n\n(define (element-of-set? x set)\n    (cond ((null? set) false)\n          ((equal? x (car set)) #t)\n          (else (element-of-set? x (cdr set)))))\n\n(union-set (list 1 2 3 4) (list 2 3 4 5 6))\n;Value 2: (1 2 3 4 5 6)"}}}},"pageContext":{"name":"2.59.scm","expr":"master:sicp/ch2-abstraction-data/2.59.scm"}}