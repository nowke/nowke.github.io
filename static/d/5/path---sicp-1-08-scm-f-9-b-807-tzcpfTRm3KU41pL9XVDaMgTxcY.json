{"data":{"github":{"repository":{"object":{"__typename":"GitHub_Blob","text":"; Newton’s method for cube roots is based on the fact \n; that if y is an approximation to the cube root of x , \n; then a better approximation is given by the value\n;\n;            x/y² + 2y\n;           ------------\n;                 3\n;\n; Use this formula to implement a cube-root procedure analogous \n; to the square-root procedure\n(define (square x) (* x x))\n(define (cube x) (* x x x))\n(define (improve guess x)\n    (/ (+ (/ x (square guess)) (* 2 guess)) 3)\n)\n\n(define (good-enough? guess prev-guess)\n  (< (abs (- guess prev-guess)) (abs (* guess 0.001)))\n)\n(define (cuberoot-iter guess prev-guess x) \n    (if (good-enough? guess prev-guess)\n      guess\n      (cuberoot-iter (improve guess x) guess x)\n    )\n  )\n\n(define (cube-root x) \n    (cuberoot-iter 1.0 0.0 x)\n) \n\n(cube-root 8) ;Value: 2.000000000012062\n(cube-root 1e-27) ;Value: 1.0000000000037844e-9\n(cube-root 1e15) ;Value: 100000.0000002152"}}}},"pageContext":{"name":"1.08.scm","expr":"master:sicp/ch1-abstraction-procedures/1.08.scm"}}